using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using UnityEngine;

namespace BleakBridge
{
    internal class BlockUtils
    {
        private static float[,] locations = {{-417.9027f,31.61374f,-567.5766f},
                                             {-416.9027f,31.61374f,-567.5766f},
                                             {-415.9027f,31.61374f,-567.5766f},
                                             {-415.9027f,31.61374f,-566.5766f},
                                             {-414.9027f,31.61374f,-566.5766f},
                                             {-414.9027f,31.61374f,-567.5766f},
                                             {-414.9027f,31.61374f,-565.5766f},
                                             {-416.9027f,31.61374f,-566.5766f},
                                             {-415.9027f,31.61374f,-565.5766f},
                                             {-413.9027f,31.61374f,-567.5766f},
                                             {-413.9027f,31.61374f,-565.5766f},
                                             {-413.9027f,31.61374f,-566.5766f},
                                             {-412.9027f,31.61374f,-565.5766f},
                                             {-412.9027f,31.61374f,-566.5766f},
                                             {-412.9027f,31.61374f,-567.5766f},
                                             {-411.9027f,31.61374f,-567.5766f},
                                             {-410.9027f,31.61374f,-567.5766f},
                                             {-411.9027f,31.61374f,-566.5766f},
                                             {-410.9027f,31.61374f,-566.5766f},
                                             {-411.9027f,31.61374f,-565.5766f},
                                             {-410.9027f,31.61374f,-565.5766f},
                                             {-409.9027f,31.61374f,-565.5766f},
                                             {-409.9027f,31.61374f,-566.5766f},
                                             {-409.9027f,31.61374f,-567.5766f},
                                             {-408.9027f,31.61374f,-567.5766f},
                                             {-408.9027f,31.61374f,-566.5766f},
                                             {-408.9027f,31.61374f,-565.5766f},
                                             {-407.9027f,31.61374f,-565.5766f},
                                             {-407.9027f,31.61374f,-566.5766f},
                                             {-407.9027f,31.61374f,-567.5766f},
                                             {-406.9027f,31.61374f,-566.5766f},
                                             {-406.9027f,31.61374f,-567.5766f},
                                             {-406.9027f,31.61374f,-565.5766f},
                                             {-405.9027f,31.61374f,-565.5766f},
                                             {-404.9027f,31.61374f,-565.5766f},
                                             {-405.9027f,31.61374f,-566.5766f},
                                             {-404.9027f,31.61374f,-566.5766f},
                                             {-404.9027f,31.61374f,-567.5766f},
                                             {-405.9027f,31.61374f,-567.5766f},
                                             {-403.9027f,31.61374f,-565.5766f},
                                             {-403.9027f,31.61374f,-566.5766f},
                                             {-403.9027f,31.61374f,-567.5766f},
                                             {-402.9027f,31.61374f,-566.5766f},
                                             {-402.9027f,31.61374f,-567.5766f},
                                             {-401.9027f,31.61374f,-567.5766f},
                                             {-400.9027f,31.61374f,-568.5766f},
                                             {-401.9027f,31.61374f,-568.5766f},
                                             {-402.9027f,31.61374f,-568.5766f},
                                             {-399.9027f,31.61374f,-569.5766f},
                                             {-400.9027f,31.61374f,-569.5766f},
                                             {-401.9027f,31.61374f,-569.5766f},
                                             {-402.9027f,31.61374f,-569.5766f},
                                             {-399.9027f,31.61374f,-570.5766f},
                                             {-400.9027f,31.61374f,-570.5766f},
                                             {-401.9027f,31.61374f,-570.5766f},
                                             {-402.9027f,31.61374f,-570.5766f},
                                             {-399.9027f,31.61374f,-571.5766f},
                                             {-400.9027f,31.61374f,-571.5766f},
                                             {-401.9027f,31.61374f,-571.5766f},
                                             {-399.9027f,31.61374f,-572.5766f},
                                             {-399.9027f,31.61374f,-573.5766f},
                                             {-399.9027f,31.61374f,-574.5766f},
                                             {-400.9027f,31.61374f,-572.5766f},
                                             {-401.9027f,31.61374f,-572.5766f},
                                             {-402.9027f,31.61374f,-571.5766f},
                                             {-402.9027f,31.61374f,-572.5766f},
                                             {-400.9027f,31.61374f,-573.5766f},
                                             {-400.9027f,31.61374f,-574.5766f},
                                             {-402.9027f,31.61374f,-573.5766f},
                                             {-401.9027f,31.61374f,-573.5766f},
                                             {-401.9027f,31.61374f,-574.5766f},
                                             {-402.9027f,31.61374f,-574.5766f},
                                             {-403.9027f,31.61374f,-568.5766f},
                                             {-403.9027f,31.61374f,-569.5766f},
                                             {-404.9027f,31.61374f,-568.5766f},
                                             {-403.9027f,31.61374f,-570.5766f},
                                             {-404.9027f,31.61374f,-569.5766f},
                                             {-405.9027f,31.61374f,-568.5766f},
                                             {-398.9027f,31.61374f,-570.5766f},
                                             {-398.9027f,31.61374f,-571.5766f},
                                             {-398.9027f,31.61374f,-572.5766f},
                                             {-397.9027f,31.61374f,-571.5766f},
                                             {-400.9027f,31.61374f,-575.5766f},
                                             {-398.9027f,31.61374f,-573.5766f},
                                             {-397.9027f,31.61374f,-572.5766f},
                                             {-401.9027f,31.61374f,-575.5766f},
                                             {-402.9027f,31.61374f,-575.5766f},
                                             {-401.9027f,31.61374f,-576.5766f},
                                             {-402.9027f,31.61374f,-576.5766f},
                                             {-402.9027f,31.61374f,-577.5766f},
                                             {-403.9027f,31.61374f,-576.5766f},
                                             {-403.9027f,31.61374f,-577.5766f},
                                             {-404.9027f,31.61374f,-577.5766f},
                                             {-405.9027f,31.61374f,-577.5766f},
                                             {-404.9027f,31.61374f,-576.5766f},
                                             {-405.9027f,31.61374f,-576.5766f},
                                             {-406.9027f,31.61374f,-576.5766f},
                                             {-403.9027f,31.61374f,-575.5766f},
                                             {-404.9027f,31.61374f,-575.5766f},
                                             {-405.9027f,31.61374f,-575.5766f},
                                             {-406.9027f,31.61374f,-575.5766f},
                                             {-407.9027f,31.61374f,-575.5766f},
                                             {-403.9027f,31.61374f,-574.5766f},
                                             {-404.9027f,31.61374f,-574.5766f},
                                             {-405.9027f,31.61374f,-574.5766f},
                                             {-406.9027f,31.61374f,-574.5766f},
                                             {-407.9027f,31.61374f,-574.5766f},
                                             {-403.9027f,31.61374f,-571.5766f},
                                             {-403.9027f,31.61374f,-572.5766f},
                                             {-403.9027f,31.61374f,-573.5766f},
                                             {-404.9027f,31.61374f,-571.5766f},
                                             {-404.9027f,31.61374f,-572.5766f},
                                             {-404.9027f,31.61374f,-573.5766f},
                                             {-404.9027f,31.61374f,-570.5766f},
                                             {-405.9027f,31.61374f,-569.5766f},
                                             {-405.9027f,31.61374f,-570.5766f},
                                             {-405.9027f,31.61374f,-571.5766f},
                                             {-405.9027f,31.61374f,-572.5766f},
                                             {-405.9027f,31.61374f,-573.5766f},
                                             {-406.9027f,31.61374f,-568.5766f},
                                             {-406.9027f,31.61374f,-569.5766f},
                                             {-406.9027f,31.61374f,-570.5766f},
                                             {-406.9027f,31.61374f,-571.5766f},
                                             {-406.9027f,31.61374f,-572.5766f},
                                             {-406.9027f,31.61374f,-573.5766f},
                                             {-407.9027f,31.61374f,-568.5766f},
                                             {-407.9027f,31.61374f,-569.5766f},
                                             {-407.9027f,31.61374f,-570.5766f},
                                             {-407.9027f,31.61374f,-571.5766f},
                                             {-407.9027f,31.61374f,-572.5766f},
                                             {-407.9027f,31.61374f,-573.5766f},
                                             {-408.9027f,31.61374f,-568.5766f},
                                             {-408.9027f,31.61374f,-569.5766f},
                                             {-408.9027f,31.61374f,-570.5766f},
                                             {-408.9027f,31.61374f,-571.5766f},
                                             {-408.9027f,31.61374f,-572.5766f},
                                             {-408.9027f,31.61374f,-573.5766f},
                                             {-413.9027f,31.61374f,-564.5766f},
                                             {-414.9027f,31.61374f,-564.5766f},
                                             {-409.9027f,31.61374f,-569.5766f},
                                             {-409.9027f,31.61374f,-568.5766f},
                                             {-410.9027f,31.61374f,-569.5766f},
                                             {-410.9027f,31.61374f,-568.5766f},
                                             {-411.9027f,31.61374f,-569.5766f},
                                             {-411.9027f,31.61374f,-568.5766f},
                                             {-412.9027f,31.61374f,-569.5766f},
                                             {-412.9027f,31.61374f,-568.5766f},
                                             {-413.9027f,31.61374f,-568.5766f},
                                             {-409.9027f,31.61374f,-570.5766f},
                                             {-410.9027f,31.61374f,-570.5766f},
                                             {-411.9027f,31.61374f,-570.5766f},
                                             {-409.9027f,31.61374f,-571.5766f},
                                             {-410.9027f,31.61374f,-571.5766f},
                                             {-409.9027f,31.61374f,-572.5766f},
                                             {-412.9027f,31.61374f,-564.5766f},
                                             {-411.9027f,31.61374f,-564.5766f},
                                             {-410.9027f,31.61374f,-564.5766f},
                                             {-409.9027f,31.61374f,-564.5766f},
                                             {-408.9027f,31.61374f,-564.5766f},
                                             {-407.9027f,31.61374f,-564.5766f},
                                             {-406.9027f,31.61374f,-564.5766f},
                                             {-405.9027f,31.61374f,-564.5766f},
                                             {-404.9027f,31.61374f,-564.5766f}};

        private static void createCube(Vector3 pos)
        {
            GameObject cube = GameObject.CreatePrimitive(PrimitiveType.Cube);
            cube.transform.position = pos;
        }

        public static void createBlocks()
        {
            for(int i = 0; i < locations.GetLength(0); ++i)
            {
                createCube(new Vector3(locations[i,0], locations[i,1], locations[i,2]));
            }
        }
    }
}
